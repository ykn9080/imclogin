let fetch;_e39‍.w("node-fetch",[["default",["fetch"],function(v){fetch=v}]]);

const client_id = process.env.GITHUB_CLIENT_ID;
const client_secret = process.env.GITHUB_CLIENT_SECRET;

module.exports = (app, passport) => {
  app.get("/", (req, res) => {
    res.send("hello");
  });
  app.get("/login/github", (req, res) => {
    console.log("in login/github");
    const redirect_uri = "http://localhost:9001/login/github/callback";
    res.redirect(
      `https://github.com/login/oauth/authorize?client_id=${process.env.GITHUB_CLIENT_ID}&redirect_uri=${redirect_uri}`
    );
  });
  app.get("/login/github/callback", async (req, res) => {
    const code = req.query.code;
    _e39‍.g.console.log("code: ", code);
    const access_token = await getAccessToken({
      code,
      client_id,
      client_secret,
    });
    const user = await fetchGitHubUser(access_token);
    if (user) {
      req.session.access_token = access_token;
      req.session.githubId = user.id;
      res.send("Login succeed!, githubId");
    } else {
      res.send("Login did not succeed!");
    }
    //res.send(JSON.stringify(user,null,4))

    // next step here
  });
  app.get("/admin", async (req, res) => {
    if (req.session.githubId) {
      // && req.session.githubId === 1126497) {
      res.send("Hello Kevin <pre>" + JSON.stringify(req.session, null, 2));
      // Possible use "fetchGitHubUser" with the access_token
    } else {
      res.redirect("/login/github");
    }
  });
  app.get("/logout", (req, res) => {
    _e39‍.g.console.log(req.session);
    if (req.session) req.session = null;
    res.redirect("/");
  });
  async function getAccessToken({ code, client_id, client_secret }) {
    const request = await fetch("https://github.com/login/oauth/access_token", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        client_id,
        client_secret,
        code,
      }),
    });
    const text = await request.text();
    const params = new URLSearchParams(text);
    return params.get("access_token");
    // text contains the response
  }
  async function fetchGitHubUser(token) {
    const request = await fetch("https://api.github.com/user", {
      headers: {
        Authorization: "token " + token,
      },
    });
    return await request.json();
  }
};
